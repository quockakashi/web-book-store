<h3 style="font-weight: bold; margin-bottom: 0px;">
        {{component.name}}
</h3>
<p class="mb-4">{{component.subtitle}}</p>

<div class="d-flex mb-4" style="gap: 24px;">
    <form style="max-width: 220px; border-radius: 16px" class="shadow-sm" action="/orders">
      <div class="input-group" style="border-radius: 16px;">
          <input name="search" type="text" class="form-control" style="border-radius: 16px 0 0 16px; border: none" placeholder="Search!" value="{{meta.search}}" required>
          <button style="border-radius: 0 16px 16px 0; background-color: inherit; border: none" class="input-group-text">
              <i class=" text-primary fa-solid fa-magnifying-glass"></i>
          </button>
      </div>
  </form>
  <div class="d-flex align-items-center" style="gap: 8px">
    <i class="text-primary fa-solid fa-filter"></i>
    <select class="form-select form-select-sm shadow-sm" aria-label=".form-select-sm example" style="max-width: 180px; border: none; border-radius: 16px" onchange="handleSelectStatusChange(event)" id="statusSelect">
              <option value="all">All Status</option>
              <option value="processing" {{#eq 'processing' meta.status}}selected{{/eq}}>
                Processing
              </option>
              <option value="delivering" {{#eq 'delivering' meta.status}}selected{{/eq}}>
                Delivering
              </option>
              <option value="completed" {{#eq 'completed' meta.status}}selected{{/eq}}>
                Completed
              </option>
              <option value="canceled" {{#eq 'canceled' meta.status}}selected{{/eq}}>
                Canceled
              </option>
    </select>
  </div>
    <div class="d-flex align-items-center" style="gap: 8px">
    <i class="text-primary fa-solid fa-sort"></i>
    <select class="form-select form-select-sm shadow-sm" aria-label=".form-select-sm example" style="max-width: 140px; border: none; border-radius: 16px" onchange="handleSelectSortChange(event)" id="sortSelect">
            <option value="createdAt-desc" {{#eq meta.sort 'createdAt-desc'}}selected{{/eq}}>Newest</option>
            <option value="createdAt-asc" {{#eq meta.sort 'createdAt-asc'}}selected{{/eq}}>Oldest</option>
            <option value="total-desc" {{#eq meta.sort 'total-desc'}}selected{{/eq}}>
              Total: High-Low
            </option>
            <option value="total-asc" {{#eq meta.sort 'total-asc'}}selected{{/eq}}>
              Total: Low-High
            </option>
    </select>
  </div>
</div>

  <table class="mx-auto table mt-4" style="border-radius: 8px; box-shadow:7px 7px 7px rgba(0, 0, 0, 0.1); max-width: 900px;">
    <caption class="caption-top">List of orders</caption>
    <thead>
      <tr>
        <th scope="col">Order ID</th>
        <th scope="col">Customer</th>
        <th scope="col" class="text-center">Created At</th>
        <th scope="col" class="text-center">Total</th>
        <th scope="col" class="text-center">Status</th>
      </tr>
    </thead>
    <tbody>
        {{#each orders}}
        <tr class="px-4 py-3" rowId="{{this._id}}" rowName="{{this.name}}">
            <td style="vertical-align: middle;">
                <p style="font-size: 12px;">{{this.orderId}}</p>
            </td>
            <td style="vertical-align: middle;"><a href="#" class="link" style="font-size: 14px;">{{this.customer.username}}</a></td>
            <td class="text-center" style="vertical-align: middle;">
                <p style="font-size: 12px;">{{this.createdAt}}</p>
            </td>
            <td class="text-center" style="vertical-align: middle;">
                <p style="font-size: 12px;">${{this.total}}</p>
            </td>
            <td class="text-center" style="vertical-align: middle;">
                <select 
                class="form-select text-light status-select"
                style="border: none; font-size: 14px; border-radius: 24px; outline: none; max-width: 200px" orderId="{{this._id}}">
                    <option
                    value="processing" {{#eq this.status 'processing'}}selected{{/eq}}>
                            Processing
                        </div>
                    </option>
                    <option value="delivering" {{#eq this.status 'delivering'}}selected{{/eq}}>
                        Delivering
                    </option>
                    <option value="completed" {{#eq this.status 'completed'}}selected{{/eq}}>
                        Completed
                    </option>
                    <option
                    value="canceled" {{#eq this.status 'canceled'}}selected{{/eq}}>
                        Canceled
                    </option>
                </select>
            </td>
        </tr>
        {{/each}}
    </tbody>
  </table>
{{#if meta.showPagination}}
<nav aria-label="Page navigation example" style="margin-top: 32px;">
  <ul class="pagination justify-content-center">
    <li class="page-item {{#if meta.noPrev}}disabled{{/if}}">
      <a class="page-link" href="/categories?page={{meta.prevPage}}&sortBy={{meta.sortBy}}&sortDir={{meta.sortDir}}{{#if meta.hasSearch}}&search={{meta.search}}{{/if}}" aria-label="Previous">
        <span aria-hidden="true">&laquo;</span>
      </a>
    </li>
    {{#range 1 meta.totalPage}}
        <li class="page-item {{#eq this ../meta.page}}active{{/eq}}"><a class="page-link" href="/categories?page={{this}}&sortBy={{../meta.sortBy}}&sortDir={{../meta.sortDir}}{{#if ../meta.hasSearch}}&search={{../meta.search}}{{/if}}">{{this}}</a></li>
    {{/range}}
    <li class="page-item {{#if meta.noNext}}disabled{{/if}}">
      <a class="page-link" href="/categories?page={{meta.nextPage}}&sortBy={{meta.sortBy}}&sortDir={{meta.sortDir}}{{#if meta.hasSearch}}&search={{meta.search}}{{/if}}" aria-label="Next">
        <span aria-hidden="true">&raquo;</span>
      </a>
    </li>
  </ul>
</nav>
{{/if}}

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">

<div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Confirm Deleting!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" 
        data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="continueBtn" data-bs-dismiss="modal">Continue</button>
      </div>
    </div>
  </div>
</div>



<script>
    let catId = null;
    $(document).ready(() => {
        $('.status-select').each((index, select) => {
            setBgSelect($(select));
            $(select).change(handleChangeStatus);
        })
        const editingMessage = localStorage.getItem('justEditing');
        if(editingMessage) {
            showMainAlert('success', editingMessage);
            localStorage.removeItem('justEditing');
        }
    })

    function setBgSelect(select) {
        const status = select.find(':selected').val();
        switch(status) {
            case 'processing':
                select.removeClass();
                select.addClass('form-select status-select bg-warning text-light');
                break;
            case 'delivering':
                select.removeClass();
                select.addClass('form-select status-select bg-primary text-light');
                break;
            case 'completed':
                select.removeClass();
                select.addClass('form-select status-select bg-success text-light');
                break;
            case 'canceled':
                select.removeClass();
                select.addClass('form-select status-select bg-danger text-light');
                break;
        }
    }

    async function handleChangeStatus(e) {
        const select = $(this);
        const orderId = select.attr('orderId');
        const status = select.find(':selected').val();
        const response = await fetch(`/api/orders/${orderId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({status})
        });

        const message = await response.json();

        if(response.ok) {
            setBgSelect(select);
            showMainAlert('success', message.message);
        } else {
            showMainAlert('danger', message.message);
        }
    }

     function handleSelectStatusChange(e) {
      let currentHref = new URLSearchParams(window.location.search);
      const status = $('#statusSelect').find(':selected').val()
      if(status == 'all')
        currentHref.delete('status');
      else {
        currentHref.set('status', status);
      }
      window.location.search = currentHref.toString();
    }

    function handleSelectSortChange(e) {
      let currentHref = new URLSearchParams(window.location.search);
      const sortVal = $('#sortSelect').find(':selected').val()
      const [sortBy, sortDir] = sortVal.split('-');
      currentHref.set('sortBy', sortBy);
      currentHref.set('sortDir', sortDir);
      window.location.search = currentHref.toString();
    }
    
  </script>